name: Extension-Template

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ assigned, opened, reopened, synchronize, ready_for_review ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7.12 # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. Any potentiel difference in patches between jobs will lead to a cache not found error.
          cache: poetry

      - name: Install dependencies
        run: make install

      - name: Lint files
        run: make lint

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Tox
        run: pipx install tox

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7.12 # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. Any potentiel difference in patches between jobs will lead to a cache not found error.

      - name: Test the Python API
        run: tox -e test

  test-api:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Tox
        run: pipx install tox

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7.12 # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. Any potentiel difference in patches between jobs will lead to a cache not found error.

      - name: Test the Web API
        run: tox -e test-api

  check-version-and-changelog:
    runs-on: ubuntu-20.04
    needs: [ lint, test, test-api ] # Last job to run

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all the tags

      - name: Install Poetry
        run: pipx install poetry

      - name: Check version number has been properly updated
        run: ./.github/is-version-number-acceptable.sh

  # GitHub Actions does not have a halt job option, to stop from deploying if no functional changes were found.
  # We build a separate job to substitute the halt option.
  # The `deploy` job is dependent on the output of the `check-for-functional-changes`job.
  check-for-functional-changes:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master' # Only triggered for the `master` branch
    needs: [ check-version-and-changelog ]
    outputs:
      status: ${{ steps.stop-early.outputs.status }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all the tags

      - name: Install Poetry
        run: pipx install poetry

      - id: stop-early
        run: if "./.github/has-functional-changes.sh" ; then echo "::set-output name=status::success" ; fi

  deploy:
    runs-on: ubuntu-20.04
    needs: [ check-for-functional-changes ]
    if: needs.check-for-functional-changes.outputs.status == 'success'

    env:
      PYPI_USERNAME: openfisca-bot
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all the tags

      - name: Install Poetry
        run: pipx install poetry

      - name: Upload dist to PyPi
        run: poetry --build --username $PYPI_USERNAME --password $PYPI_PASSWORD

      - name: Publish a git tag
        run: ./.github/publish-git-tag.sh
